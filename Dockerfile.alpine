FROM docker.io/library/alpine AS builder
RUN apk add --no-cache \
      git \
      g++ \
      ninja \
      cmake \
      linux-headers \
      qt5-qtbase \
      qt5-qtbase-dev && \
    apk add --no-cache \
      -X http://dl-cdn.alpinelinux.org/alpine/edge/testing
WORKDIR /build
RUN git clone https://github.com/eriksjolund/libsimdpp.git && \
    git -C libsimdpp checkout modernize_cmake_support && \
    cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/app -B build1 -S libsimdpp/cmake/simd-compile-options && \
    cmake --build build1 --target install && \
    cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/app -DBUILD_SHARED_LIBS=on -DCMAKE_PREFIX_PATH=/app -B build2 -S libsimdpp && \
    cmake --build build2 --target install && \
    git clone https://github.com/capnproto/capnproto.git && \
    git -C capnproto checkout v0.8.0 && \
    cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/app -DBUILD_SHARED_LIBS=on -DCMAKE_PREFIX_PATH=/app -B build3 -S capnproto && \
    cmake --build build3 --target install && \
    git clone https://github.com/eriksjolund/simd-diagonal-load.git && \
    git -C simd-diagonal-load checkout rearrange && \
    cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/app p -DCMAKE_PREFIX_PATH=/app -DBUILD_SHARED_LIBS=on -B build4 -S simd-diagonal-load && \
    cmake --build build4 --target install && \
    git clone https://github.com/eriksjolund/simd-diagonal-load-json-demo.git && \
    cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/app p -DCMAKE_PREFIX_PATH=/app -DBUILD_SHARED_LIBS=on -B build5 -S simd-diagonal-load-json-demo && \
    cmake --build build5 --target install

FROM docker.io/library/alpine
RUN apk add --no-cache \
      qt5-qtbase && \
    apk add --no-cache \
      -X http://dl-cdn.alpinelinux.org/alpine/edge/testing \
      jq
COPY --from=builder /app /app
CMD /bin/sh
ENV LD_LIBRARY_PATH=/app/lib:$LD_LIBRARY_PATH \
    PATH=/app/bin:$PATH
